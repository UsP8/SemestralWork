<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN" "http://www.w3.org/TR/MathML2/dtd/xhtml-math11-f.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta name="GENERATOR" content="LyX 2.0.1" />
<meta http-equiv="Content-type" content="text/html;charset=UTF-8" />
<title>Project for Markup language</title>

<!-- Text Class Preamble -->
<style type="text/css">
div.toc {
margin: 2em 0em;
border-style: solid;
border-width: 2px 0px;
padding: 1em 0em;
}
div.tochead { font-size: x-large; font-weight: bold; }
div.lyxtoc-0 {
margin: 2em 0em 0em 0em;
font-size: xx-large;
font-weight: bold;
}
div.lyxtoc-1 {
margin: 1em 0em 0em 0em;
font-size: x-large;
font-weight: bold;
}
div.lyxtoc-2 {
margin: 0em 0em 0em 1em;
font-size: large;
font-weight: normal;
}
div.lyxtoc-3 { margin: 0em 0em 0em 0.5em; font-size: medium; }
div.lyxtoc-4 { margin: 0em 0em 0em 0.5em; }
div.lyxtoc-5 { margin: 0em 0em 0em 0.5em; }
div.lyxtoc-6 { margin: 0em 0em 0em 0.5em; }
a.tocentry {
text-decoration: none;
color: black;
}
a.tocentry:visited { color: black; }
a.tocarrow {
font-weight: bold;
text-decoration: none;
color: #909090;
}
a.tocarrow:visited { color: #C0C0C0; }
</style>

<!-- Preamble Snippets -->

<!-- Layout-provided Styles -->
<style type='text/css'>
h1.title {
font-size: x-large;
margin-bottom: 1ex;
text-align: center;

}
div.author {
font-size: large;
margin-top: 1.3ex;
margin-bottom: 0.7ex;
text-align: center;

}
div.date {
font-size: large;
margin-top: 0.9ex;
margin-bottom: 0.5ex;
text-align: center;

}
h1.part {
font-weight: bold;
font-size: x-large;
margin-top: 2ex;
margin-bottom: 1.5ex;
text-align: left;

}
div.standard {
margin-bottom: 2ex;
}
h2.section {
font-weight: bold;
font-size: x-large;
margin-top: 1.3ex;
margin-bottom: 0.7ex;
text-align: left;

}
blockquote.verse {
margin-top: 0.7ex;
margin-bottom: 0.7ex;
margin-left: 4ex;
text-align: left;

}
ul.itemize {
margin-top: 0.7ex;
margin-bottom: 0.7ex;
margin-left: 3ex;
text-align: left;

}
</style>
</head>
<body>
<h1 class="title"><a id='magicparlabel-2434' />
Project for Markup language</h1>
<div class="author"><a id='magicparlabel-2435' />
Student: Adam Vod√°k (INFOA)</div>
<div class="date"><a id='magicparlabel-2436' />
04.03.2017</div>
<h1 class="part"><span class="part_label">Part I</span> <a id='magicparlabel-2437' />
Table of contents:</h1>
<div class="standard"><a id='magicparlabel-2438' />
</div>
<div class='toc'><div class='tochead part'>Table of Contents</div></div>

<div class='lyxtoc-0'><a href='#magicparlabel-2437' class='tocentry'>Part I Table of contents:</a> <a href='#magicparlabel-2437' class='tocarrow'>&gt;</a></div>

<div class='lyxtoc-0'><a href='#magicparlabel-2439' class='tocentry'>Part II Introduction:</a> <a href='#magicparlabel-2439' class='tocarrow'>&gt;</a>

<div class='lyxtoc-1'><a href='#magicparlabel-2440' class='tocentry'>1 Why should we use XML language?</a> <a href='#magicparlabel-2440' class='tocarrow'>&gt;</a></div>

<div class='lyxtoc-1'><a href='#magicparlabel-2443' class='tocentry'>2 What actualy XML is for?</a> <a href='#magicparlabel-2443' class='tocarrow'>&gt;</a></div>
</div>

<div class='lyxtoc-0'><a href='#magicparlabel-2446' class='tocentry'>Part III Methodology</a> <a href='#magicparlabel-2446' class='tocarrow'>&gt;</a>

<div class='lyxtoc-1'><a href='#magicparlabel-2447' class='tocentry'>3 Methodology</a> <a href='#magicparlabel-2447' class='tocarrow'>&gt;</a></div>

<div class='lyxtoc-1'><a href='#magicparlabel-2449' class='tocentry'>4 Used technologies</a> <a href='#magicparlabel-2449' class='tocarrow'>&gt;</a></div>
</div>

<div class='lyxtoc-0'><a href='#magicparlabel-2451' class='tocentry'>Part IV Elements description</a> <a href='#magicparlabel-2451' class='tocarrow'>&gt;</a>

<div class='lyxtoc-1'><a href='#magicparlabel-2456' class='tocentry'>5 Tags and attributes</a> <a href='#magicparlabel-2456' class='tocarrow'>&gt;</a></div>

<div class='lyxtoc-1'><a href='#magicparlabel-2459' class='tocentry'>6 Describe the implementation regarding the real usage</a> <a href='#magicparlabel-2459' class='tocarrow'>&gt;</a></div>
</div>

<div class='lyxtoc-0'><a href='#magicparlabel-2461' class='tocentry'>Part V Transformation description</a> <a href='#magicparlabel-2461' class='tocarrow'>&gt;</a></div>

<div class='lyxtoc-0'><a href='#magicparlabel-2465' class='tocentry'>Part VI My conclusion</a> <a href='#magicparlabel-2465' class='tocarrow'>&gt;</a></div>

<div class='lyxtoc-0'><a href='#magicparlabel-2468' class='tocentry'>Part VII References:</a> <a href='#magicparlabel-2468' class='tocarrow'>&gt;</a></div>

<h1 class="part"><span class="part_label">Part II</span> <a id='magicparlabel-2439' />
<br />
Introduction:</h1>
<h2 class="section"><span class="section_label">1</span> <a id='magicparlabel-2440' />
Why should we use XML language?</h2>
<div class="standard"><a id='magicparlabel-2441' />
Although XML was created to overcome the shortcomings of HTML, it becomes more and more popular all over the world. It is even considered a critical tech- nology which can change the future of the web. And there are some reasons for this: Through XML, it is possible to exchange documents and data of a variety of formats easily and perfectly. Because XML can process and present data in various ways, it is possible for each user to exchange his data/documents in dif- ferent formats. [8]</div>

<div class="standard"><a id='magicparlabel-2442' />
Users can easily handle structured databases on the web. XML can be easily changed into database les and vice-versa. So, users can directly import a variety of data on the web to their own database. Better Internet searching possible. Because XML eliminates the uncertainties of information, the speed and accuracy of Internet searching will be improved. Authors and providers can design their own document types. Document types can be explic- itly tailored to users, so the cumbersome fudging that has to take place with HTML to achieve special eects can become a thing of the past. Information content can be richer and easier to use because the hypertext linking abilities of XML are much greater than those of HTML.[6]</div>
<h2 class="section"><span class="section_label">2</span> <a id='magicparlabel-2443' />
What actualy XML is for?</h2>
<div class="standard"><a id='magicparlabel-2444' />
Really Simple Syndication, arguably the most popular content syndication format on the web today, is simply an XML-based schema. XHTML is essentially the HTML markup language you're well familiar with only adjusted to conform to XML structure, syntax, and validation. So it is yet another XML-based language. WML is the XML-based markup for WAP services. The list goes on. By being built upon XML, these case-specic schemas have inherited XML's rich infrastructure for free. No complaints here! Outside of the many structured language implementations of XML, the most obvious role of XML as a stand-alone "le format" is to represent data apart from visual markup. But why would you want to store content in XML as opposed to a database? To one point of view, XML is a more neutral and ac- cessible container for your data to reside within one that does not require as much database adapters and local conguration. Although it's also common to nd XML used as streamed data from a connected application that is, as an environment-neutral communications vehicle XML content is designed to be equally efective stored. [1]</div>

<div class="standard"><a id='magicparlabel-2445' />
The AJAX development model is based on sending XML data back and forth between browser and server, allowing JavaScript to use the received data to update a web page without refreshing. Flash-based Rich Internet Applications can, of course, directly access XML les and streams by way of the XML class and connector component in Flash 8. In ActionScript 3, XML is now treated as a native data type. As opposed to opening and reading an XML le, and then parsing and acting upon it, Ac- tionScript 3 allows you simply to refer to an XML file as a variable, and manipulate your data directly from that point on. You can expect to see more and more coding environments and frameworks move this way as XML entrenches itself further as data's lingua franca of the web. XML is very eective at providing aggregate views of content, such as syndicating a range of documents. Really Simple Syndication, is one format widely used for syndication, and in most cases is autogenerated by the system managing the site content. Web log frameworks like Movable Type and Blogger generate and update a static Really Simple Syndication le on your server whenever a new post is published to the system, which Really Simple Syndication savvy clients can then read and use (in most cases an internal stylesheet) to create the visual layout of the structured content data in the Really Simple Syndication /XML feed.[5]</div>
<h1 class="part"><span class="part_label">Part III</span> <a id='magicparlabel-2446' />
<br />
Methodology</h1>
<h2 class="section"><span class="section_label">3</span> <a id='magicparlabel-2447' />
Methodology</h2>
<div class="standard"><a id='magicparlabel-2448' />
Due to the growing use of XML data format in global information, an eective XML data management system is needed. An Enabled XML DB is one of 2 the recent widely accepted approaches to store XML documents. This ability coupled with the increase use of XML data in dierent areas have triggered the need for a better method to structure a large data in order to improve query performance. Issues concerning the ways to eciently partition large XML documents into a more manageable form are yet to be addressed. At the same time, it is essential to ensure that the partitioning method maintains the preservation of XML data hierarchical structure. For this reason, this paper introduces OXDP that structures large XML data logically by partitioning them into object based XML components. An evaluation is shown to demonstrate the efectiveness of OXDP in XML partitioning which subsequently has the potential of improving query performance in Enabled XML DB environments.</div>
<h2 class="section"><span class="section_label">4</span> <a id='magicparlabel-2449' />
Used technologies</h2>
<div class="standard"><a id='magicparlabel-2450' />
In my project I have been really long time looking and searching on the Internet what have I actualy used because my friend programmator was helping me with this project. But after couple of minutes I have found that actualy I have used DTD (Document Type Denition) A standard for dening the legal elements and attributes in an XML document and XSL stylesheet transformation to HTML. Unluckily I wasn't able to transform my project into HTML table and put it on the web.[3]</div>
<h1 class="part"><span class="part_label">Part IV</span> <a id='magicparlabel-2451' />
<br />
Elements description</h1>

<blockquote class="verse"><p class="verse_item"><a id='magicparlabel-2452' />
What is element from the global POV?</p>
</blockquote>

<ul class="itemize"><li class="itemize_item"><a id='magicparlabel-2453' />
An element describes the data that it contains. </li>
<li class="itemize_item"><a id='magicparlabel-2454' />
Elements can also contain other elements and attributes. </li>
<li class="itemize_item"><a id='magicparlabel-2455' />
When an element denition contains additional elements or attributes, it is a complex type</li>
</ul>
<h2 class="section"><span class="section_label">5</span> <a id='magicparlabel-2456' />
Tags and attributes</h2>
<div class="standard"><a id='magicparlabel-2457' />
The Extensible Stylesheet Language Transformations (XSLT) APIs can be used for many purposes. For example, with a suciently intelligent stylesheet, you 3 could generate PDF or PostScript output from the XML data. But generally, XSLT is used to generate formatted HTML output, or to create an alternative XML representation of the data.In this section, you'll use an XSLT transform to translate XML input data to HTML output.</div>

<div class="standard"><a id='magicparlabel-2458' />
An attribute is a named simple-type denition that cannot contain other ele- ments. Attributes can also be assigned an optional default value and they must appear at the bottom of complex-type denitions. Additionally, if multiple attributes are declared, they may occur in any order. [2]</div>
<h2 class="section"><span class="section_label">6</span> <a id='magicparlabel-2459' />
Describe the implementation regarding the real usage</h2>
<div class="standard"><a id='magicparlabel-2460' />
Elsevier Science, a publisher of scientic, technical, and medical information, uses Mark Logic's Content Interaction Server to manage more than two ter- abytes of data: ve million full-text journal articles, 60 million citations and abstracts, thousands of complete books, and ve thousand informational pam- phlets. The system is used to search and transform documents. Raining Data's TigerLogic XML Data Management Server is used in similar fashion by large scientic publishing companies.[9]</div>
<h1 class="part"><span class="part_label">Part V</span> <a id='magicparlabel-2461' />
<br />
Transformation description</h1>

<blockquote class="verse"><p class="verse_item"><a id='magicparlabel-2462' />
The Extensible Stylesheet Language Transformations (XSLT) APIs can be used for many purposes. </p>
<p class="verse_item"><a id='magicparlabel-2463' />
For example, with a suciently intelligent stylesheet, you 3 could generate PDF or PostScript output from the XML data. </p>
<p class="verse_item"><a id='magicparlabel-2464' />
But generally, XSLT is used to generate formatted HTML output, or to create an alternative XML representation of the data.In this section, you'll use an XSLT transform to translate XML input data to HTML output.[4]</p>
</blockquote>
<h1 class="part"><span class="part_label">Part VI</span> <a id='magicparlabel-2465' />
My conclusion</h1>
<div class="standard"><a id='magicparlabel-2466' />
User is able to easily handle structured databases on the web. XML can be very simply changed into database files and vice-versa. So, users can directly import a variety of data on the web to their own database. However, it is a technology that has now captured desktops, markets and mind share.<br />
</div>

<div class="standard"><a id='magicparlabel-2467' />
There is no doubt that XML is prety usefull tool and I have started using it since this semestre and I am pretty glad I do!</div>
<h1 class="part"><span class="part_label">Part VII</span> <a id='magicparlabel-2468' />
References:</h1>


<dt><a href="https://github.com/UsP8/SemestralWork.git">GitHub</a></dt>

<ul class="itemize"><li class="itemize_item"><a id='magicparlabel-2469' />
http://www.adobe.com/devnet/dreamweaver/articles/xml [1]</li>
<li class="itemize_item"><a id='magicparlabel-2470' />
http://docs.oracle.com/javase/tutorial/jaxp/xslt/transformingXML.html [2]</li>
<li class="itemize_item"><a id='magicparlabel-2471' />
http://webdesign.about.com/od/xmlglossary/tp/xml-terms.htm [3]</li>
<li class="itemize_item"><a id='magicparlabel-2472' />
http://www.techterms.com/definition/xml [4]</li>
<li class="itemize_item"><a id='magicparlabel-2473' />
http://www.realworld.html [5]</li>
<li class="itemize_item"><a id='magicparlabel-2474' />
http://www.codeproject.com/Articles/20486/What-makes-XML-such-a- great-technology [6]</li>
<li class="itemize_item"><a id='magicparlabel-2475' />
http://www.rpbourret.com/xml/UseCases.htm [7]</li>
<li class="itemize_item"><a id='magicparlabel-2476' />
http://www.w3schools.com/xml/xml technologies.aspn [8]</li>
<li class="itemize_item"><a id='magicparlabel-2477' />
http://www.w3schools.com/xsl/</li>
</ul>
</body>
</html>
